{"ast":null,"code":"//\n// import React, { useState } from 'react';\n// import { TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n// //import { useHistory } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n//\n// import axios from 'axios';\n//\n// const AdminLogin = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate(); // Use navigate instead of useHistory\n//\n//     const handleAdminLoginSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:8080/adminLogin', {\n//                 username,\n//                 password,\n//             });\n//\n//             if (response.status === 302) {\n//                 // Assuming admin login is successful and response is a redirect\n//                 const token = response.headers['location'];\n//                 localStorage.setItem('admin', token); // Store some kind of indication of admin login\n//                 navigate('/admin/homepage'); // Redirect to the admin login page\n//             }\n//         } catch (error) {\n//             setError('Admin login failed. Please check your credentials.');\n//         }\n//     };\n//\n//     return (\n//         <Dialog open={true}>\n//             <DialogTitle>Admin Login</DialogTitle>\n//             <DialogContent>\n//                 <DialogContentText>Please enter your admin login credentials.</DialogContentText>\n//                 {error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error if login fails */}\n//                 <TextField\n//                     autoFocus\n//                     margin=\"dense\"\n//                     label=\"Username\"\n//                     type=\"text\"\n//                     fullWidth\n//                     variant=\"standard\"\n//                     value={username}\n//                     onChange={(e) => setUsername(e.target.value)}\n//                 />\n//                 <TextField\n//                     margin=\"dense\"\n//                     label=\"Password\"\n//                     type=\"password\"\n//                     fullWidth\n//                     variant=\"standard\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                 />\n//             </DialogContent>\n//             <DialogActions>\n//                 <Button onClick={() => navigate('/')}>Cancel</Button>\n//                 <Button onClick={handleAdminLoginSubmit}>Admin Login</Button>\n//             </DialogActions>\n//         </Dialog>\n//     );\n// };\n//\n// export default AdminLogin;","map":{"version":3,"names":[],"sources":["C:/Users/bakga/SWE-Group-Project/frontend/src/routes/AdminLogin.js"],"sourcesContent":["//\r\n// import React, { useState } from 'react';\r\n// import { TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\n// //import { useHistory } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router-dom';\r\n//\r\n// import axios from 'axios';\r\n//\r\n// const AdminLogin = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const navigate = useNavigate(); // Use navigate instead of useHistory\r\n//\r\n//     const handleAdminLoginSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8080/adminLogin', {\r\n//                 username,\r\n//                 password,\r\n//             });\r\n//\r\n//             if (response.status === 302) {\r\n//                 // Assuming admin login is successful and response is a redirect\r\n//                 const token = response.headers['location'];\r\n//                 localStorage.setItem('admin', token); // Store some kind of indication of admin login\r\n//                 navigate('/admin/homepage'); // Redirect to the admin login page\r\n//             }\r\n//         } catch (error) {\r\n//             setError('Admin login failed. Please check your credentials.');\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <Dialog open={true}>\r\n//             <DialogTitle>Admin Login</DialogTitle>\r\n//             <DialogContent>\r\n//                 <DialogContentText>Please enter your admin login credentials.</DialogContentText>\r\n//                 {error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error if login fails */}\r\n//                 <TextField\r\n//                     autoFocus\r\n//                     margin=\"dense\"\r\n//                     label=\"Username\"\r\n//                     type=\"text\"\r\n//                     fullWidth\r\n//                     variant=\"standard\"\r\n//                     value={username}\r\n//                     onChange={(e) => setUsername(e.target.value)}\r\n//                 />\r\n//                 <TextField\r\n//                     margin=\"dense\"\r\n//                     label=\"Password\"\r\n//                     type=\"password\"\r\n//                     fullWidth\r\n//                     variant=\"standard\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                 />\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n//                 <Button onClick={() => navigate('/')}>Cancel</Button>\r\n//                 <Button onClick={handleAdminLoginSubmit}>Admin Login</Button>\r\n//             </DialogActions>\r\n//         </Dialog>\r\n//     );\r\n// };\r\n//\r\n// export default AdminLogin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}