{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bakga\\\\SWE-Group-Project\\\\frontend\\\\src\\\\routes\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory(); // To redirect after login\n\n  const handleAdminLoginSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8080/adminLogin', {\n        username,\n        password\n      });\n      if (response.status === 302) {\n        // Assuming admin login is successful and response is a redirect\n        const token = response.headers['location'];\n        localStorage.setItem('admin', token); // Store some kind of indication of admin login\n        history.push('/admin/homepage'); // Redirect to the admin homepage\n      }\n    } catch (error) {\n      setError('Admin login failed. Please check your credentials.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Please enter your admin login credentials.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Username\",\n        type: \"text\",\n        fullWidth: true,\n        variant: \"standard\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        variant: \"standard\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push('/'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAdminLoginSubmit,\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLogin, \"C4RFOjHuIyLsVoIOL4Dek9oUk4A=\", false, function () {\n  return [useHistory];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useHistory","axios","jsxDEV","_jsxDEV","AdminLogin","_s","username","setUsername","password","setPassword","error","setError","history","handleAdminLoginSubmit","e","preventDefault","response","post","status","token","headers","localStorage","setItem","push","open","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","autoFocus","margin","label","type","fullWidth","variant","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bakga/SWE-Group-Project/frontend/src/routes/AdminLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AdminLogin = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const history = useHistory(); // To redirect after login\r\n\r\n    const handleAdminLoginSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/adminLogin', {\r\n                username,\r\n                password,\r\n            });\r\n\r\n            if (response.status === 302) {\r\n                // Assuming admin login is successful and response is a redirect\r\n                const token = response.headers['location'];\r\n                localStorage.setItem('admin', token); // Store some kind of indication of admin login\r\n                history.push('/admin/homepage'); // Redirect to the admin homepage\r\n            }\r\n        } catch (error) {\r\n            setError('Admin login failed. Please check your credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={true}>\r\n            <DialogTitle>Admin Login</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Please enter your admin login credentials.</DialogContentText>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error if login fails */}\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label=\"Username\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => history.push('/')}>Cancel</Button>\r\n                <Button onClick={handleAdminLoginSubmit}>Admin Login</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}